Code :
using System.ComponentModel.DataAnnotations;

namespace LoginApp.Models
{
    public class User
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid Email Address")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Password is required")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters")]
        [DataType(DataType.Password)]
        public string Password { get; set; } = string.Empty;

        // Optional for registration
        public string FullName { get; set; } = string.Empty;
    }
}
Step 3: UserService (In-Memory Storage)
Code :
using LoginApp.Models;
using System.Collections.Generic;
using System.Linq;

namespace LoginApp.Services
{
    public class UserService
    {
        private readonly List<User> _users = new List<User>();

        // Add user (from registration)
        public void Add(User user) => _users.Add(user);

        // Get all users
        public List<User> GetAll() => _users;

        // Validate login
        public bool Validate(string email, string password)
        {
            return _users.Any(u => u.Email == email && u.Password == password);
        }
    }
}





Step 4: Register Service in Program.cs
Code :
using LoginApp.Services;

var builder = WebApplication.CreateBuilder(args);

builder.Services.AddControllersWithViews();
builder.Services.AddSingleton<UserService>();

var app = builder.Build();

if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error");
}
app.UseStaticFiles();
app.UseRouting();
app.UseAuthorization();

app.MapControllerRoute(
    name: "default",
    pattern: "{controller=User}/{action=Register}/{id?}");

app.Run();

Step 5: UserController
Right-click Controllers → Add → Controller → MVC Controller - Empty → UserController
Code :
using Microsoft.AspNetCore.Mvc;
using LoginApp.Models;
using LoginApp.Services;

namespace LoginApp.Controllers
{
    public class UserController : Controller
    {
        private readonly UserService _service;
        public UserController(UserService service) => _service = service;

        // Registration Page
        public IActionResult Register() => View();

        [HttpPost]
        [ValidateAntiForgeryToken]
        public IActionResult Register(User user)
        {
            if (!ModelState.IsValid) return View(user);

            _service.Add(user);
            return RedirectToAction(nameof(Login));
        }

        // Login Page
        public IActionResult Login() => View();

        [HttpPost]
        [ValidateAntiForgeryToken]
        public IActionResult Login(string email, string password)
        {
            if (string.IsNullOrEmpty(email) || string.IsNullOrEmpty(password))
            {
                ViewBag.Error = "Email and Password are required.";
                return View();
            }

            if (_service.Validate(email, password))
            {
                ViewBag.Message = "Login Successful!";
                return View();
            }
            else
            {
                ViewBag.Error = "Invalid Email or Password!";
                return View();
            }
        }
    }
}